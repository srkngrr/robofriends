{"ast":null,"code":"import{CHANGE_SEARCH_FIELD,REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED}from'./constants.js';export var setSearchField=function setSearchField(text){return{//returns object\ntype:CHANGE_SEARCH_FIELD,payload:text};};export var requestRobots=function requestRobots(){return function(dispatch){//not returning object\ndispatch({type:REQUEST_ROBOTS_PENDING});fetch('https://jsonplaceholder.typicode.com/users').then(function(resp){return resp.json();}).then(function(data){return dispatch({type:REQUEST_ROBOTS_SUCCESS,payload:data});}).catch(function(error){return dispatch({type:REQUEST_ROBOTS_FAILED,payload:error});});};};","map":{"version":3,"sources":["/Users/Gurer/Desktop/robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","resp","json","data","catch","error"],"mappings":"AAAA,OACCA,mBADD,CAECC,sBAFD,CAGCC,sBAHD,CAICC,qBAJD,KAKO,gBALP,CAQA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,QAAW,CAAE;AAC1CC,IAAI,CAAEN,mBADkC,CAExCO,OAAO,CAAEF,IAF+B,CAAX,EAAvB,CAKP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAc,CAAE;AAClDA,QAAQ,CAAC,CAAEH,IAAI,CAAEL,sBAAR,CAAD,CAAR,CACAS,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACO,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EADX,EAEEF,IAFF,CAEO,SAAAG,IAAI,QAAIL,CAAAA,QAAQ,CAAC,CAACH,IAAI,CAAEJ,sBAAP,CAA+BK,OAAO,CAAEO,IAAxC,CAAD,CAAZ,EAFX,EAGEC,KAHF,CAGQ,SAAAC,KAAK,QAAIP,CAAAA,QAAQ,CAAC,CAACH,IAAI,CAAEH,qBAAP,CAA8BI,OAAO,CAAES,KAAvC,CAAD,CAAZ,EAHb,EAIA,CAN4B,EAAtB","sourcesContent":["import { \n\tCHANGE_SEARCH_FIELD, \n\tREQUEST_ROBOTS_PENDING, \n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_FAILED\n} from './constants.js';\n\n\nexport const setSearchField = (text) => ({ //returns object\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text\n})\n\nexport const requestRobots = () => (dispatch) => { //not returning object\n\tdispatch({ type: REQUEST_ROBOTS_PENDING })\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(resp => resp.json())\n\t\t.then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n\t\t.catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\n}"]},"metadata":{},"sourceType":"module"}